{
  "$schema": "https://schema.railpack.com",
  "version": "1",
  "build": {
    "provider": "python",
    "packages": {
      "python": "3.13",
      "node": "20"
    },
    "steps": {
      "setup": {
        "description": "Force Yarn 4.9.2 clean install",
        "commands": [
          "echo '🔧 Starting Yarn 4.9.2 setup...'",
          "rm -rf .yarnrc .yarn .pnp.* 2>/dev/null || true",
          "echo '📦 Setting up Yarn 4.9.2 via corepack...'",
          "corepack enable",
          "corepack prepare yarn@4.9.2 --activate",
          "yarn config set nodeLinker node-modules",
          "yarn config set network-timeout 600000",
          "echo '✅ Yarn version:'",
          "yarn --version"
        ]
      },
      "web": {
        "description": "Build Next.js frontend for static export",
        "commands": [
          "echo '🌐 Starting frontend build...'",
          "yarn config set nodeLinker node-modules",
          "yarn config set network-timeout 600000",
          "echo '📚 Installing dependencies with extended timeout...'",
          "yarn install --immutable --network-timeout 600000 || yarn install --network-timeout 600000",
          "echo '🏗️ Building Next.js frontend for static export...'",
          "yarn workspace @monkey-coder/web run export || yarn workspace @monkey-coder/web run build",
          "echo '✅ Frontend build completed'",
          "ls -la packages/web/out/ | head -10 || echo 'Note: out/ directory may not exist if build used different output'"
        ],
        "inputs": [{ "step": "setup" }]
      },
      "python": {
        "description": "Install Python dependencies (deployment-optimized)",
        "commands": [
          "echo '🐍 Starting Python dependency installation...'",
          "python --version",
          "pip install --no-cache-dir --upgrade pip setuptools wheel",
          "echo '📦 Installing deployment requirements (memory-optimized)...'",
          "pip install --no-cache-dir -r requirements-deploy.txt",
          "echo '🔧 Installing core package...'",
          "cd packages/core && pip install --no-cache-dir -e .",
          "echo '✅ Python dependencies installed'"
        ],
        "inputs": [{ "step": "web" }]
      }
    }
  },
  "deploy": {
    "startCommand": "python run_server.py",
    "healthCheckPath": "/health",
    "healthCheckTimeout": 300,
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 3,
    "inputs": [{ "step": "python" }]
  }
}
