{
  "$schema": "https://schema.railpack.com",
  "provider": "python",
  "packages": {
    "python": "3.12",
    "node": "20"
  },
  "build": {
    "cache": {
      "paths": [
        "/app/venv/lib/python3.12/site-packages",
        "/root/.cache/yarn",
        "node_modules",
        "packages/web/.next"
      ]
    },
    "commands": [
      "echo '🐒 Starting Monkey Coder build process with Railway railpack optimization...'",
      "echo 'Python executable location:' $(which python)",
      "echo 'Virtual environment location:' ${VIRTUAL_ENV:-'Not detected'}",
      "echo 'Installing Python dependencies in virtual environment...'",
      "/app/venv/bin/pip install --no-cache-dir --upgrade pip setuptools wheel",
      "/app/venv/bin/pip install --no-cache-dir -r requirements-deploy.txt",
      "cd packages/core && /app/venv/bin/pip install --no-cache-dir -e .",
      "echo '📦 Python dependencies installed successfully in /app/venv'",
      "echo 'Setting up Node.js package manager...'",
      "corepack enable",
      "corepack prepare yarn@4.9.2 --activate",
      "echo '🔧 Yarn 4.9.2 configured'",
      "yarn install --immutable || yarn install",
      "echo '📦 Node dependencies installed'",
      "echo '🏗️ Building frontend with comprehensive environment setup...'",
      "export NEXT_OUTPUT_EXPORT=true",
      "export NODE_ENV=production",
      "export NEXT_TELEMETRY_DISABLED=1",
      "export NEXTAUTH_URL=${NEXTAUTH_URL:-https://coder.fastmonkey.au}",
      "export NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-railway-build-secret-$(date +%s)}",
      "export NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://coder.fastmonkey.au}",
      "export NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://coder.fastmonkey.au}",
      "export DATABASE_URL=${DATABASE_URL:-postgresql://railway.internal:5432/railway}",
      "export STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY:-pk_test_placeholder}",
      "export STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_placeholder}",
      "export STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-whsec_placeholder}",
      "echo 'Environment variables configured for build'",
      "echo 'Attempting frontend build...'",
      "yarn workspace @monkey-coder/web run export || {",
      "  echo '⚠️ Workspace export failed, trying alternative method...'",
      "  cd packages/web && yarn run export || {",
      "    echo '⚠️ Alternative export failed, trying simple build...'",
      "    cd packages/web && yarn run build && {",
      "      echo 'Build completed, checking output...'",
      "      if [ -d .next ]; then",
      "        echo 'Copying .next to out directory...'",
      "        cp -r .next out 2>/dev/null || echo 'Copy failed, continuing...'",
      "      fi",
      "    } || echo '❌ All build methods failed'",
      "  }",
      "}",
      "if [ -d packages/web/out ] && [ \"$(ls -A packages/web/out 2>/dev/null)\" ]; then",
      "  echo '✅ Frontend build completed successfully'",
      "  ls -la packages/web/out/ | head -10",
      "  echo \"Frontend assets count: $(find packages/web/out -type f | wc -l) files\"",
      "else",
      "  echo '❌ Frontend build failed during deployment - will attempt runtime build'",
      "  echo 'This is not fatal, the server will try to build at startup'",
      "fi",
      "echo 'Creating virtual environment activation script...'",
      "cat > /app/start_server.sh << 'EOF'",
      "#!/bin/bash",
      "set -e",
      "echo '🚀 Starting Monkey Coder with virtual environment activation...'",
      "echo 'Activating virtual environment at /app/venv'",
      "source /app/venv/bin/activate",
      "echo 'Virtual environment activated successfully'",
      "echo 'Python executable:' $(which python)",
      "echo 'Python version:' $(python --version)",
      "echo 'Uvicorn location:' $(which uvicorn)",
      "echo 'Starting server with uvicorn...'",
      "cd /app",
      "/app/venv/bin/python run_server.py",
      "EOF",
      "chmod +x /app/start_server.sh",
      "echo '✅ Virtual environment activation script created at /app/start_server.sh'",
      "echo '🚀 Railpack build process completed successfully'"
    ]
  },
  "deploy": {
    "startCommand": "/app/start_server.sh",
    "healthCheckPath": "/health",
    "healthCheckTimeout": 300,
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 3,
    "environment": {
      "VIRTUAL_ENV": "/app/venv",
      "PATH": "/app/venv/bin:$PATH",
      "PYTHONPATH": "/app:/app/packages/core"
    }
  }
}
