{
  "$schema": "https://schema.railpack.com",
  "packages": {
    "node": "22",
    "python": "3.12"
  },
  "secrets": [
    "DATABASE_URL",
    "REDIS_URL",
    "RAILWAY_ENVIRONMENT",
    "PYTHONPATH"
  ],
  "steps": {
    "python": {
      "inputs": [
        { "image": "python:3.12-slim" },
        { "local": true, "include": ["requirements.txt"] }
      ],
      "secrets": [],
      "commands": [
        "python -m venv .venv",
        ".venv/bin/pip install --no-cache-dir --upgrade pip",
        ".venv/bin/pip install --no-cache-dir -r requirements.txt"
      ],
      "cacheDirectories": ["/root/.cache/pip"]
    },
    "web": {
      "inputs": [
        { "image": "node:22-alpine" },
        { "local": true, "include": [
          "packages/web/**",
          "yarn.lock",
          ".yarnrc.yml",
          "package.json",
          "packages/web/next.config.*",
          "packages/web/tailwind.config.*",
          "packages/web/postcss.config.*"
        ] }
      ],
      "secrets": [],
      "commands": [
        "corepack enable",
        "cd packages/web",
        "yarn install --immutable",
        "yarn build"
      ],
      "cacheDirectories": ["/root/.yarn", "/root/.cache/yarn", "/usr/local/share/.cache/yarn"]
    }
  },
  "deploy": {
    "base": { "image": "python:3.12-slim" },
    "inputs": [
      { "local": true, "include": ["."] },
      { "step": "python", "include": [".venv"] },
      { "step": "web", "include": ["packages/web/out/**"] }
    ],
    "paths": ["/app/.venv/bin", "/.venv/bin"],
    "variables": { "PYTHONPATH": "/app:/app/packages/core" },
    "startCommand": "sh -lc 'set -e; cd /app 2>/dev/null || true; if [ -x .venv/bin/python ]; then exec .venv/bin/python run_server.py; fi; if [ -x /app/.venv/bin/python ]; then exec /app/.venv/bin/python run_server.py; fi; if command -v python3 >/dev/null 2>&1; then python3 -m venv .venv; .venv/bin/pip install --no-cache-dir --upgrade pip; .venv/bin/pip install --no-cache-dir -r requirements.txt; exec .venv/bin/python run_server.py; fi; if command -v apt-get >/dev/null 2>&1; then apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-venv python3-pip; elif command -v apk >/dev/null 2>&1; then apk add --no-cache python3 py3-pip python3-venv; fi; python3 -m venv .venv; .venv/bin/pip install --no-cache-dir --upgrade pip; .venv/bin/pip install --no-cache-dir -r requirements.txt; exec .venv/bin/python run_server.py;'",
    "healthCheckPath": "/health",
    "healthCheckTimeout": 300
  }
}
