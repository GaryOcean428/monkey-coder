name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-typecheck:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

      - name: Format check
        run: yarn format:check

      - name: Type check
        run: yarn typecheck

      - name: Markdown lint
        run: yarn lint:md

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18", "20"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        run: yarn test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Enable Corepack
        run: corepack enable

      - name: Install Node.js dependencies
        run: yarn install --immutable

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit semgrep
          # Install core package dependencies for scanning
          cd packages/core && pip install -e .

      - name: Run npm audit (Node.js security scan)
        run: |
          # Run npm audit for each workspace that has a package.json
          echo "Running npm audit for all workspaces..."
          yarn audit --audit-level moderate --groups dependencies || exit_code=$?
          if [ $exit_code -gt 0 ]; then
            echo "⚠️  npm audit found vulnerabilities"
            yarn audit --audit-level moderate --groups dependencies --json > npm-audit-report.json || true
            echo "Audit report saved to npm-audit-report.json"
          fi

      - name: Run Safety (Python dependency scan)
        run: |
          echo "Running Python security scan with Safety..."
          cd packages/core
          safety check --json --output safety-report.json || exit_code=$?
          if [ $exit_code -gt 0 ]; then
            echo "⚠️  Safety found vulnerabilities in Python dependencies"
            cat safety-report.json
          fi

      - name: Run Bandit (Python security linting)
        run: |
          echo "Running Python security linting with Bandit..."
          cd packages/core
          bandit -r monkey_coder -f json -o bandit-report.json || exit_code=$?
          if [ $exit_code -gt 0 ]; then
            echo "⚠️  Bandit found security issues"
            cat bandit-report.json
          fi

      - name: Run Semgrep (SAST)
        run: |
          echo "Running SAST scan with Semgrep..."
          semgrep --config=auto --json --output=semgrep-report.json . || exit_code=$?
          if [ $exit_code -gt 0 ]; then
            echo "⚠️  Semgrep found security issues"
            cat semgrep-report.json
          fi

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            npm-audit-report.json
            safety-report.json
            bandit-report.json
            semgrep-report.json
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            !packages/*/dist/**/*.test.*
          retention-days: 7
