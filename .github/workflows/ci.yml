name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  node-workspaces:
    name: Node Workspaces (Yarn 4)
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack (Yarn Berry)
        run: corepack enable

      - name: Install dependencies
        run: |
          yarn --version
          yarn install --immutable

      - name: Type check
        run: |
          yarn workspaces foreach -At run typecheck --if-present
          yarn workspaces foreach -At run type-check --if-present

      - name: Lint
        run: |
          yarn workspaces foreach -At run lint --if-present

      - name: Test (with coverage)
        run: |
          yarn workspaces foreach -At run test:coverage --if-present

      - name: Upload Node coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-coverage
          path: |
            coverage/**
            packages/*/coverage/**
          if-no-files-found: ignore

      - name: Upload Node JUnit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-junit
          path: |
            packages/*/coverage/junit/*.xml
            coverage/junit/*.xml
          if-no-files-found: ignore

      - name: Publish Node Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            packages/*/coverage/junit/*.xml
            coverage/junit/*.xml

  python-core:
    name: Python Core (pytest)
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: .
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Install core package and its dependencies
          pip install -e packages/core
          # Install test dependencies
          pip install pytest pytest-asyncio pytest-cov

      - name: Run tests with coverage
        run: |
          pytest -q --cov=monkey_coder --cov-report=xml:coverage.xml --cov-fail-under=60 --junitxml=pytest-results.xml packages/core/tests

      - name: Upload Python coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml
          if-no-files-found: ignore

      - name: Upload Python test results (JUnit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-junit
          path: pytest-results.xml
          if-no-files-found: ignore

      - name: Run quantum test subset (JUnit)
        run: |
          pytest -q packages/core/tests/quantum --junitxml=pytest-quantum.xml

      - name: Upload Python quantum test results (JUnit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-quantum-junit
          path: pytest-quantum.xml
          if-no-files-found: ignore

      - name: Upload Quantum metrics artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-quantum-metrics
          path: artifacts/quantum/metrics.json
          if-no-files-found: ignore

      - name: Publish Python Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            pytest-results.xml
            pytest-quantum.xml
