name: Benchmarks

on:
  schedule:
    - cron: '0 3 * * *'  # Daily at 03:00 UTC
  workflow_dispatch:
    inputs:
      runs:
        description: 'Number of iterations'
        required: false
        default: '5'
      parallel:
        description: 'Use quantum parallel execution (true/false)'
        required: false
        default: 'true'

jobs:
  quantum-benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install core dependencies (minimal)
        working-directory: packages/core
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Run benchmark
        run: |
          mkdir -p benchmarks/results
          python benchmarks/benchmark_quantum.py \
            --runs ${{ github.event.inputs.runs || 5 }} \
            --parallel ${{ github.event.inputs.parallel || 'true' }} \
            --output benchmarks/results/BASELINE-${{ github.run_id }}.json
      - name: Upload benchmark artifact
        uses: actions/upload-artifact@v4
        with:
          name: quantum-benchmark-${{ github.run_id }}
          path: benchmarks/results/*.json
      - name: Post summary
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const glob = fs.readdirSync('benchmarks/results').filter(f=>f.endsWith('.json'));
            if (!glob.length) return;
            const data = JSON.parse(fs.readFileSync(`benchmarks/results/${glob[0]}`, 'utf8'));
            let body = `## ðŸ•’ Benchmark Summary\n\n`;
            body += `Runs: ${data.config.runs} | Parallel: ${data.config.parallel}\\n`;
            body += `Mean latency: ${data.metrics.mean_latency_ms.toFixed(2)} ms\\n`;
            body += `p95 latency: ${data.metrics.p95_latency_ms.toFixed(2)} ms\\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
