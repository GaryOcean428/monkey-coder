#!/bin/bash

# Pre-commit hook to prevent Railway build system conflicts
# This hook runs before each commit to ensure build configuration consistency

echo "üîç Running Railway build configuration validation..."

# Check if railpack.json exists and is valid
if [ -f "railpack.json" ]; then
    # Validate JSON syntax
    if ! jq '.' railpack.json > /dev/null 2>&1; then
        echo "‚ùå ERROR: railpack.json has invalid JSON syntax!"
        echo "   Please fix the JSON syntax before committing."
        exit 1
    fi

    # Check for competing files
    COMPETING_FILES=()
    if [ -f "railway.json" ]; then
        COMPETING_FILES+=("railway.json")
    fi
    if [ -f "Dockerfile" ]; then
        COMPETING_FILES+=("Dockerfile")
    fi
    if [ -f "railway.toml" ]; then
        COMPETING_FILES+=("railway.toml")
    fi
    if [ -f "nixpacks.toml" ]; then
        COMPETING_FILES+=("nixpacks.toml")
    fi

    if [ ${#COMPETING_FILES[@]} -gt 0 ]; then
        echo "‚ùå ERROR: Found competing build configuration files:"
        for file in "${COMPETING_FILES[@]}"; do
            echo "   - $file"
        done
        echo ""
        echo "   This will cause Railway deployment failures!"
        echo "   Remove competing files to use railpack.json only:"
        for file in "${COMPETING_FILES[@]}"; do
            echo "   rm $file"
        done
        echo ""
        echo "   Or run: ./scripts/railway-build-validation.sh"
        exit 1
    fi

    echo "‚úÖ Railway build configuration is valid"
else
    echo "‚ö†Ô∏è  WARNING: railpack.json not found"
    echo "   This project uses railpack.json for Railway deployment"
fi

# Run the full validation script if it exists
if [ -f "scripts/railway-build-validation.sh" ]; then
    ./scripts/railway-build-validation.sh
fi

exit 0
