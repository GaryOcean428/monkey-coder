#!/bin/bash
#
# Railway Service Configuration Fix Script
# 
# This script provides the EXACT Railway CLI commands needed to fix all three services
# Run this script to get copy-paste ready commands for fixing your Railway deployment
#
# Usage: bash scripts/fix-railway-services.sh
#

set -e

BOLD='\033[1m'
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BOLD}${BLUE}"
echo "╔════════════════════════════════════════════════════════════════════╗"
echo "║                                                                    ║"
echo "║     Railway Deployment Crisis - Service Configuration Fix         ║"
echo "║                                                                    ║"
echo "╚════════════════════════════════════════════════════════════════════╝"
echo -e "${NC}"

echo -e "${YELLOW}⚠️  CRITICAL ISSUE:${NC} All Railway services are failing because they're"
echo "   configured with 'rootDirectory' set to subdirectories (services/frontend, etc.)"
echo ""
echo -e "${GREEN}✓ SOLUTION:${NC} All services must operate from repository root (/) where"
echo "   railpack.json exists and Yarn workspaces function correctly."
echo ""

# Check if Railway CLI is installed
if ! command -v railway &> /dev/null; then
    echo -e "${RED}✗ Railway CLI not found!${NC}"
    echo ""
    echo "Install it with:"
    echo "  npm install -g @railway/cli"
    echo "  or"
    echo "  curl -fsSL https://railway.app/install.sh | sh"
    echo ""
    exit 1
fi

echo -e "${GREEN}✓ Railway CLI detected${NC}"
echo ""

# Provide service IDs (these will need to be updated based on actual deployment)
echo -e "${BOLD}STEP 1: Link to your Railway project${NC}"
echo "────────────────────────────────────────"
echo ""
echo -e "${BLUE}# First, link to your Railway project:${NC}"
echo "railway link"
echo ""
echo "Press ENTER to continue to service-specific commands..."
read -r

echo ""
echo -e "${BOLD}STEP 2: Fix Frontend Service (monkey-coder)${NC}"
echo "────────────────────────────────────────────"
echo ""
echo -e "${RED}Current Config (BROKEN):${NC}"
echo "  Root Directory: services/frontend"
echo "  Build Command: cd packages/web && yarn install..."
echo ""
echo -e "${GREEN}Required Fix:${NC}"
echo ""
echo -e "${BLUE}# Link to frontend service:${NC}"
echo "railway service"
echo -e "${YELLOW}# Then select: monkey-coder${NC}"
echo ""
echo -e "${BLUE}# Remove root directory (set to blank or /):${NC}"
echo "railway service update --root-directory /"
echo ""
echo -e "${BLUE}# Verify environment variables are set:${NC}"
echo "railway variables"
echo ""
echo -e "${BLUE}# Required environment variables:${NC}"
echo "railway variables set NODE_ENV=production"
echo "railway variables set NEXT_OUTPUT_EXPORT=true"
echo "railway variables set NEXT_TELEMETRY_DISABLED=1"
echo "railway variables set NEXT_PUBLIC_APP_URL=https://coder.fastmonkey.au"
echo 'railway variables set NEXT_PUBLIC_API_URL=https://${{monkey-coder-backend.RAILWAY_PUBLIC_DOMAIN}}'
echo ""
echo -e "${BLUE}# Trigger manual deployment:${NC}"
echo "railway up"
echo ""
echo "Press ENTER to continue to backend service..."
read -r

echo ""
echo -e "${BOLD}STEP 3: Fix Backend Service (monkey-coder-backend)${NC}"
echo "───────────────────────────────────────────────────"
echo ""
echo -e "${RED}Current Config (BROKEN):${NC}"
echo "  Root Directory: services/backend"
echo "  Start Command: yarn workspace... (WRONG - should be Python!)"
echo ""
echo -e "${GREEN}Required Fix:${NC}"
echo ""
echo -e "${BLUE}# Link to backend service:${NC}"
echo "railway service"
echo -e "${YELLOW}# Then select: monkey-coder-backend${NC}"
echo ""
echo -e "${BLUE}# Remove root directory:${NC}"
echo "railway service update --root-directory /"
echo ""
echo -e "${BLUE}# Set config path to use railpack-backend.json:${NC}"
echo "echo 'In Railway Dashboard: Settings → Config as Code → Path: railpack-backend.json'"
echo ""
echo -e "${BLUE}# Required environment variables:${NC}"
echo "railway variables set PYTHON_ENV=production"
echo 'railway variables set ML_SERVICE_URL=http://${{monkey-coder-ml.RAILWAY_PRIVATE_DOMAIN}}'
echo ""
echo -e "${YELLOW}# Also ensure these are set (copy from existing config):${NC}"
echo "# - DATABASE_URL"
echo "# - REDIS_URL"
echo "# - OPENAI_API_KEY"
echo "# - ANTHROPIC_API_KEY"
echo "# - GROQ_API_KEY"
echo "# - GOOGLE_API_KEY"
echo "# - XAI_API_KEY"
echo ""
echo -e "${BLUE}# Trigger deployment:${NC}"
echo "railway up"
echo ""
echo "Press ENTER to continue to ML service..."
read -r

echo ""
echo -e "${BOLD}STEP 4: Fix ML Service (monkey-coder-ml)${NC}"
echo "──────────────────────────────────────────"
echo ""
echo -e "${RED}Current Config (BROKEN):${NC}"
echo "  Root Directory: services/ml"
echo ""
echo -e "${GREEN}Required Fix:${NC}"
echo ""
echo -e "${BLUE}# Link to ML service:${NC}"
echo "railway service"
echo -e "${YELLOW}# Then select: monkey-coder-ml${NC}"
echo ""
echo -e "${BLUE}# Remove root directory:${NC}"
echo "railway service update --root-directory /"
echo ""
echo -e "${BLUE}# Set config path to use railpack-ml.json:${NC}"
echo "echo 'In Railway Dashboard: Settings → Config as Code → Path: railpack-ml.json'"
echo ""
echo -e "${BLUE}# Required environment variables:${NC}"
echo "railway variables set PYTHON_ENV=production"
echo "railway variables set TRANSFORMERS_CACHE=/app/.cache/huggingface"
echo ""
echo -e "${BLUE}# Trigger deployment:${NC}"
echo "railway up"
echo ""
echo -e "${YELLOW}⚠️  Note: First ML build takes 25+ minutes due to torch/CUDA downloads${NC}"
echo ""

echo ""
echo -e "${BOLD}${GREEN}VERIFICATION STEPS${NC}"
echo "═══════════════════════════════════════════"
echo ""
echo -e "${BLUE}# Check deployment logs:${NC}"
echo "railway logs --service monkey-coder"
echo "railway logs --service monkey-coder-backend"
echo "railway logs --service monkey-coder-ml"
echo ""
echo -e "${BLUE}# Expected success indicators in logs:${NC}"
echo "  ✓ Using config file 'railpack.json' (or railpack-backend.json, etc.)"
echo "  ✓ Running from /app (repo root)"
echo "  ✓ yarn workspace commands succeed (frontend)"
echo "  ✓ Python uvicorn starts successfully (backend/ML)"
echo "  ✓ Health check passed: /api/health"
echo ""
echo -e "${BLUE}# Test health endpoints:${NC}"
echo "curl https://coder.fastmonkey.au/api/health"
echo "curl https://monkey-coder-backend-production.up.railway.app/api/health"
echo ""
echo -e "${GREEN}Expected: 200 OK with JSON response${NC}"
echo ""

echo -e "${BOLD}${GREEN}ALTERNATIVE: Using Railway Dashboard${NC}"
echo "═══════════════════════════════════════════════════"
echo ""
echo "If you prefer using the Railway Dashboard:"
echo ""
echo "1. Go to: https://railway.app/project/[your-project-id]"
echo ""
echo "2. For EACH service (monkey-coder, monkey-coder-backend, monkey-coder-ml):"
echo "   a. Click on the service"
echo "   b. Go to: Settings → Service"
echo "   c. Find 'Root Directory' and change to: /"
echo "   d. Clear any manual 'Build Command' or 'Start Command' overrides"
echo "   e. Go to: Settings → Config as Code"
echo "   f. Set Path to appropriate config:"
echo "      - Frontend: railpack.json"
echo "      - Backend: railpack-backend.json"
echo "      - ML: railpack-ml.json"
echo "   g. Save changes"
echo ""
echo "3. Redeploy each service manually or push a commit to GitHub"
echo ""

echo -e "${BOLD}${BLUE}📚 DOCUMENTATION${NC}"
echo "═══════════════════════════════════════════════════"
echo ""
echo "Complete guide: RAILWAY_DEPLOYMENT.md"
echo "Quick reference: RAILWAY_QUICK_CONFIG.md"
echo "Troubleshooting: RAILWAY_DEPLOYMENT.md (Common Pitfalls section)"
echo ""

echo -e "${BOLD}${GREEN}Script complete!${NC}"
echo ""
echo "Copy and paste the commands above into your terminal, or"
echo "use the Railway Dashboard instructions to fix your services."
echo ""
